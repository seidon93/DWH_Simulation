-- SCHEMA users (gov)
CREATE TABLE IF NOT EXISTS Users.uzivatel (
    user_ID SERIAL PRIMARY KEY ,
    username VARCHAR(255),
    password VARCHAR(255),
    email VARCHAR(255),
    role VARCHAR(50)
);

-- SCHEMA CRM (all tables)
GRANT CREATE, USAGE ON SCHEMA CRM TO ADMINISTRATOR, TECHNICAL_GROUP, DEV_GROUP;

GRANT USAGE ON SCHEMA CRM TO ANALYSIS_GROUP;


CREATE TABLE CRM.CUSTOMERS (
    CUSTOMER_ID SERIAL,
    FIRST_NAME  VARCHAR(255) NOT NULL,
    LAST_NAME   VARCHAR(255) NOT NULL,
    FULL_NAME   VARCHAR(255),
    EMAIL       VARCHAR(255) NOT NULL,
    PHONE_NMB   INTEGER,
    COMPANY     BOOL         NOT NULL
);


CREATE UNIQUE INDEX CUSTOMERS_UIN
    ON CRM.CUSTOMERS ( CUSTOMER_ID );

ALTER TABLE CRM.CUSTOMERS
    ADD CONSTRAINT CUSTOMERS_PK
        PRIMARY KEY ( CUSTOMER_ID );


CREATE TABLE CRM.CONTACTS (
    CONTACT_ID SERIAL
        CONSTRAINT CONTACTS_PK PRIMARY KEY,
    TITLE      VARCHAR(10),
    FIRST_NAME VARCHAR(255) NOT NULL,
    LAST_NAME  VARCHAR(255) NOT NULL,
    FULL_NAME  VARCHAR(255),
    EMAIL      VARCHAR(255) NOT NULL,
    CUSTOMER   INTEGER
);


CREATE TABLE CRM.CAMPAGIN (
    CAMPAGIN_ID   SERIAL
        CONSTRAINT CAMPAGIN_PK PRIMARY KEY,
    CAMPAGIN_NAME VARCHAR(255),
    START_DATE    DATE    NOT NULL,
    END_DATE      DATE,
    STATUS        VARCHAR(255),
    BUDGET        INTEGER NOT NULL
);


CREATE TABLE ACTIVITY (
    ACTIVITY_ID SERIAL
        CONSTRAINT ACTIVITY_PK PRIMARY KEY,
    CUSTOMER    INTEGER NOT NULL,
    DATE        DATE    NOT NULL,
    OUTCOME     TEXT    NOT NULL,
    TYPE        TEXT    NOT NULL
        CONSTRAINT CHECK_ACTIVITY_TYPE
            CHECK (TYPE IN ('Email', 'Phone', 'Meeting')),
        CONSTRAINT CHECK_OUTCOME
            CHECK (OUTCOME IN ('Successful', 'Unsuccessful', 'Other actions'))
);


CREATE INDEX ACTIVITY_CUSTOMER_INDEX
    ON ACTIVITY ( CUSTOMER );

CREATE TABLE CRM.CASE (
    CASE_ID     SERIAL
        CONSTRAINT CASE_PK PRIMARY KEY,
    CUSTOMER    INTEGER,
    PROBLEM     VARCHAR(255) NOT NULL,
    DESCRIPTION TEXT         NOT NULL,
    STATUS      TEXT         NOT NULL,
    PRIORITY    TEXT         NOT NULL,
    CREATED     TIMESTAMP,
    SOLVED      TIMESTAMP,
        CONSTRAINT CHECK_STATUS
            CHECK (STATUS IN ('Open', 'Closed', 'In the solution')),
        CONSTRAINT CHECK_PRIORITY
            CHECK ( PRIORITY IN ('Low', 'Middle', 'High'))
);





